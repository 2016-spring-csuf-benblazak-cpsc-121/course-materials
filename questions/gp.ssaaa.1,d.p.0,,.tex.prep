!dnl vim: ft=tex
!dws,input(../common.prep)

% \newpage
\newEvenPage
% \newOddPage

!exec,prep,(doc.gen_question_header)

% -----------------------------------------------------------------------------

Do the following:
\begin{itemize}
  \item Write pseudocode for the merge sort algorithm.
  \item Write pseudocode for, and a function that implements, the selection
    sort algorithm.
\end{itemize}

\textAnswer{{\par\footnotesize
  \subsection*{merge sort}
  \begin{itemize}
    \item If the list received is less than 2 elements long then return it
      unchanged.
    \item Otherwise, do the following:
      \begin{itemize}
        \item Split the list in half (putting the odd element, if any, in
          either half).
        \item Recursively merge sort the left half.
        \item Recursively merge sort the right half.
        \item Merge the sorted left and right halves together as follows:
          \begin{itemize}
            \item Create a new empty list named \mintinline{cpp}{sorted}.
            \item While both lists are nonempty:
              \begin{itemize}
                \item Compare the first element of each list.
                \item Take the smaller element out of the list it is in, and
                  put it in \mintinline{cpp}{sorted}.
              \end{itemize}
            \item Take the remaining elements from the nonempty list, and place
              them in order at the end of \mintinline{cpp}{sorted}.
            \item Return \mintinline{cpp}{sorted}.
          \end{itemize}
      \end{itemize}
  \end{itemize}

  \subsection*{selection sort}
  \begin{itemize}
    \item For each element in the list, in order from left to right:
      \begin{itemize}
        \item Find the minimum element between that element and the end of the
          list (inclusive)
        \item If that element is not the minimum element, swap it with the
          minimum element.
      \end{itemize}
  \end{itemize}

  \inputminted{cpp}{\docCodeDir/.gen.question.cpp.section.selection-sort}
}}

\textQuestion{\makePageQuadrilleRuled}

\newpage

\textQuestion{\makePageQuadrilleRuled}

