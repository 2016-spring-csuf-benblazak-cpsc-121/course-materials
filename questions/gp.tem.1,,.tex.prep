!dnl vim: ft=tex
!dws,input(../common.prep)

% \newpage
\newEvenPage
% \newOddPage

!exec,prep,(doc.gen_question_header)

% -----------------------------------------------------------------------------

\subsection*{Style}
\begin{itemize}

  \item Leave a bit of room at the top of the page for comments,
    \mintinline{cpp}{#include} directives, and \mintinline{cpp}{using}
    statements.

  \item \textbf{Write prototypes for all function members inside the class, and
    definitions directly underneath.}

  \item Be sure to document your code with a good amount (not too many, not too
    few) of comments.

\end{itemize}

\subsection*{Instructions}
\begin{itemize}
  \item Write a class template named \mintinline{cpp}{Stack10} that accepts one
    template argument, \mintinline{cpp}{T}.  This class will implement a
    simple, fixed-size stack.

  \item The class template should contain the following private data members:
    \begin{itemize}
      \item \mintinline{cpp}{SIZEMAX}, of type
        \mintinline{cpp}{static const int}, initialized to
        \mintinline{cpp}{10}.
      \item \mintinline{cpp}{size}, of type \mintinline{cpp}{int} or
        \mintinline{cpp}{unsigned int}, initialized to \mintinline{cpp}{0}.
      \item \mintinline{cpp}{data}, an array of \mintinline{cpp}{SIZEMAX}
        elements of type \mintinline{cpp}{T}, initialized to their default
        value.
    \end{itemize}

  \item The class template should contain the following public function
    members:
    \begin{itemize}
      \item \mintinline{cpp}{push}, which takes one argument of type
        \mintinline{cpp}{T}, and returns \mintinline{cpp}{void}.  If there is
        not room to put another element on the stack, it should throw an
        exception.  Otherwise, it should set the next unused element of
        \mintinline{cpp}{data} to the value received as an argument, and then
        increment \mintinline{cpp}{size}.
      \item \mintinline{cpp}{pop}, which takes no arguments, and returns
        something of type \mintinline{cpp}{T}.  If the stack has no elements in
        it to pop, it should throw an exception.  Otherwise, it should save the
        most recently inserted element in a temporary variable, decrement
        \mintinline{cpp}{size}, and return the element that was saved to a
        temporary variable.
    \end{itemize}

  \item Inside \mintinline{cpp}{main}
    \begin{itemize}
      \item Create a \mintinline{cpp}{Stack10} named \mintinline{cpp}{s}.
      \item Use the \mintinline{cpp}{push} method on \mintinline{cpp}{s} to
        push 5 numbers (of your choice) onto the stack.
      \item Use the \mintinline{cpp}{pop} method on \mintinline{cpp}{s} to
        remove and output all the elements on the stack.
    \end{itemize}

\end{itemize}

\newOddPage
\textQuestion{\makePageQuadrilleRuled}
\textAnswer{\showCodeTop{question}{all}}

\newOddPage
\textQuestion{\makePageQuadrilleRuled}
\textAnswer{~}

